pid /var/run/nginx/nginx.pid;

events {
    worker_connections 512;
}

http {

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        ssl_password_file /etc/nginx/ssl/certificate_key.txt;
        listen            443                                ssl;
        listen            [::]:443                           ssl;
        root              /usr/share/nginx/html;
        index             index.html;

        server_name _;
        charset     utf-8;

        # Active et configure le ssl
        ssl_certificate     /etc/nginx/ssl/ft_transcendence.crt;
        ssl_certificate_key /etc/nginx/ssl/ft_transcendence.key;
        ssl_protocols       TLSv1.2                             TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        keepalive_timeout   70;
        ssl_session_cache   shared:SSL:10m;
        ssl_session_timeout 10m;

        # Permet de log les access ou les erreurs dans ces fichiers.
        access_log /var/log/nginx/ft_transcendence.access.log;
        error_log  /var/log/nginx/ft_transcendence.error.log  debug;

        location / {
            try_files          $uri       /index.html;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade    $http_upgrade;
            proxy_set_header   Connection "upgrade";
            proxy_set_header   Host       $host;
        }

       location /api/auth/ {
            proxy_pass         http://transcendence_auth:5000/; # Remplacer backend par le nom du service
            proxy_set_header   Host                 $host;
            proxy_set_header   X-Real-IP            $remote_addr;
            proxy_set_header   X-Forwarded-For      $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto    $scheme;
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;
        }

        # Ajout d'une route pour verifier que nginx reponds bien.
        location /nginx_heath {
            access_log off;
            add_header Content-Type text/plain;
            return     200          'healthy\n';
        }


        # Ajout d'un cache pour les fichiers statics
        location ~* \.(css|png|jpg|jpeg|gif|ico|svg)$ {
            expires       max;
            log_not_found off;
        }

        #proxy_intercept_errors on;     # Ne pas envoyer les erreurs
        default_type application/json; # Retourner du json par defaut

        # Gzip pour optimiser les performances
        gzip       on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        error_page 500 501 502 503 504=@500;
        location @500 {
            return 503 '{"status":503,"message":"Le serveur ne peut donner suite a votre demande !"}\n';
        }
    }
}
